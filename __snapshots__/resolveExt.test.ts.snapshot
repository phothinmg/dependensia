exports[`Resolve extensions > should replace extension with different extension 1`] = `
{
  "filePath": "./test-utils/esm/foo.js",
  "expected": "./test-utils/esm/foo.ts",
  "result": "./test-utils/esm/foo.ts"
}
`;

exports[`Resolve extensions > should replace extension with same extension 1`] = `
{
  "filePath": "./test-utils/esm/foo.js",
  "expected": "./test-utils/esm/foo.js",
  "result": "./test-utils/esm/foo.js"
}
`;

exports[`Resolve extensions > should replace extension with without extension 1`] = `
{
  "filePath": "./test-utils/esm/foo",
  "expected": "./test-utils/esm/foo.js",
  "result": "./test-utils/esm/foo.js"
}
`;

exports[`Resolve extensions > should replace file path extension if it is different from resolved extension 1`] = `
{
  "filePath": "./test-utils/ts/foo.js",
  "expected": "./test-utils/ts/foo.ts",
  "result": "./test-utils/ts/foo.ts"
}
`;

exports[`Resolve extensions > should resolve file path without extension 1`] = `
{
  "filePath": "./test-utils/esm/foo",
  "expected": "./test-utils/esm/foo.js",
  "result": "./test-utils/esm/foo.js"
}
`;

exports[`Resolve extensions > should throw error if file path does not exist 1`] = `
{
  "filePath": "path/to/non-existent-file"
}
`;
